#!/usr/bin/groovy

pipeline {
    agent any

    options {
        disableConcurrentBuilds()
    }

    stages {
        //这一步是为了让Jenkins找到Mac OS主机上的docker命令
        stage('init') {
           steps {
            script{
              def dockerPath = tool 'docker' //需要在global Tool里配置bin/docker的路径，默认/usr/local/bin/docker
              env.PATH = "${dockerPath}/bin:${env.PATH}" //添加了系统环境变量上
            }
           }
        }

        stage("Build") {
            steps { buildApp() }
		}

        stage("Deploy - Dev") {
            steps { deploy('dev') }
		}

	}
}


// steps
def buildApp() {
	dir ('section_4/code/cd_pipeline' ) {
		def appImage = docker.build("hands-on-jenkins/myapp:${BUILD_NUMBER}")
	}
}

def deploy(environment) {

	def containerName = ''
	def port = ''

	if ("${environment}" == 'dev') {
		containerName = "app_dev"
		port = "8888"
	} 
	else {
		println "Environment not valid"
		System.exit(0)
	}

    // below two sh command doesn't work for MacOS
	//sh "docker ps -f name=${containerName} -q | xargs --no-run-if-empty docker stop"
	//sh "docker ps -a -f name=${containerName} -q | xargs -r docker rm"
	sh "docker run -d -p ${port}:5000 --name ${containerName} hands-on-jenkins/myapp:${BUILD_NUMBER}"

}

